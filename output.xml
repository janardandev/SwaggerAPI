<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.1.2 (Python 3.10.2 on win32)" generated="20220714 19:46:45.575" rpa="false" schemaversion="2">
<suite id="s1" name="SwaggerAPI" source="C:\development\SwaggerAPI">
<suite id="s1-s1" name="TestCases" source="C:\development\SwaggerAPI\TestCases">
<suite id="s1-s1-s1" name="US2" source="C:\development\SwaggerAPI\TestCases\US2.robot">
<test id="s1-s1-s1-t1" name="Upload_Image">
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220714 19:46:47.034" level="INFO">Creating Session using : alias=mysession, url=https://petstore.swagger.io/v2/pet, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220714 19:46:47.034" endtime="20220714 19:46:47.035"/>
</kw>
<kw name="Get File For Streaming Upload" library="RequestsLibrary">
<var>${file}</var>
<arg>C:\\development\\SwaggerAPI\\TestCases/dog.jpg</arg>
<doc>Opens and returns a file descriptor of a specified file to be passed as ``data`` parameter
to other requests keywords.</doc>
<msg timestamp="20220714 19:46:47.036" level="INFO">${file} = &lt;_io.BufferedReader name='C:\\development\\SwaggerAPI\\TestCases/dog.jpg'&gt;</msg>
<status status="PASS" starttime="20220714 19:46:47.035" endtime="20220714 19:46:47.036"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${files}</var>
<arg>file</arg>
<arg>${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:47.038" level="INFO">${files} = {'file': &lt;_io.BufferedReader name='C:\\development\\SwaggerAPI\\TestCases/dog.jpg'&gt;}</msg>
<status status="PASS" starttime="20220714 19:46:47.038" endtime="20220714 19:46:47.038"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:47.040" level="INFO">${Header} = {'accept': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:47.039" endtime="20220714 19:46:47.040"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${resp}</var>
<arg>mysession</arg>
<arg>/9843217/uploadImage</arg>
<arg>headers=${Header}</arg>
<arg>files=${files}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220714 19:46:48.146" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet/9843217/uploadImage 
 path_url=/v2/pet/9843217/uploadImage 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Length': '5908', 'Content-Type': 'multipart/form-data; boundary=c87827f916733a74fbb0565b8a06fd33'} 
 body=b'--c87827f916733a74fbb0565b8a06fd33\r\nContent-Disposition: form-data; name="file"; filename="dog.jpg"\r\n\r\n\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xdb\x00\x84\x00\n\x07\x08\x16\x15\x15\x18\x15\x15\x16\x19\x18\x18\x19\x19\x1a\x18\x1c\x18\x18\x1a\x18\x18\x19\x1a\x18\x1a\x18\x19\x19\x1a\x19\x1a\x1a\x1c!.%\x1c\x1e+!\x18\x18&amp;8&amp;+/1555\x1a$;@;3?.451\x01\x0c\x0c\x0c\x10\x0f\x10\x1e\x12\x12\x1f4,$+44446454444644444444444444444441444444464444444444\xff\xc0\x00\x11\x08\x00\xc2\x01\x03\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1b\x00\x00\x02\x03\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x00\x01\x04\x05\x06\x07\xff\xc4\x005\x10\x00\x01\x03\x02\x04\x04\x04\x05\x03\x04\x03\x01\x00\x00\x00\x00\x01\x00\x02\x11\x03!\x04\x121A\x05Qaq"\x81\x91\xb1\x13\xa1\xc1\xd1\xf02\xe1\xf1\x06\x14BRbr\x92\x15\xff\xc4\x00\x18\x01\x00\x03\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\xff\xc4\x00(\x11\x00\x02\x02\x02\x02\x02\x01\x03\x04\x03\x00\x00\x00\x00\x00\x00\x00\x01\x02\x11\x12!\x031AQ"\x13aq\x042B\x81\x91\xa1\xc1\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf3\xed\x08\xc2\x10\x8d\xab\x90\xc86\x84`!j \x80,#hB\x02cB\x04HD\xd0\xaf*\xb6\xb5\x00\x1bB \x15\x00\x88\x04\x05\x96\x02\x80(\x11\x04\x01\x02 UB\x90\x8b\x0b\nTC\n\xe1\x16\x16IU*B\xa2\x11ae\x12\x84\x94D*!\x16+\x02U\x12\x8e\x10\x90\x81\xd8\x04\xa1%\x11BR\xb0\xb2\x8a\x02Q\x94\x04"\xc2\xc1%\x01DB\x12\x98\x02P\x94D!(\x1d\x8br\x12\x8d\xc1\x01\t\x80\x10\xa2\xb5\x10\x01\x80\x98\xd4 #\x01!\x04\n \x84\x04m\x08\x10mLjXj6\x84\x00a\x18B\xd0\x8c a\x05aPV\x02\x00%a@\x15\xc2\x04E\x01U\nB\x00%h@W\x08\x02\xca\x12\xac\x84\x04)\x02\xd0\x90\x88)\x08\x00\x14!\x16UD \x058 !4\x84\x04 \x05\x94%0\x84%\xa8\x01e\x03\x93KR\xdc\x15\x00\x05\tDZ\xa9\xcd@\xc5\xb9\x01L!\x01\x08\x01j"\x85\x101\xe1\xa8\xda\xd5mj0\x106\x8a\x0cMk\x15\x00\x98\xd0\x81\x14\x1a\x89\xadE\x95\x10j\x00\x80"\rP5\x10\x08\x11A\xa8\xc3\x11\xb5\xa8\x83QC\xa0CU\x86\xa6\x06\xab\x84\xe8T/*\x99\x13CT\x01*\n\x00SD)\xa6\x80\xa4\'C\xa1Y\x02\x17SN*\x16\xa2\x80G\xc3S\xe1\xadTp\xeey\x86\x82J\xebP\xe0\xc2%\xee3\xc8E\xbc\xd3Qo\xa1\xa8\xd9\xe7\xfe\x1a\x071z\x9f\xfem\x11\xb1&gt;e-\xf8\x1a&lt;\xa3\xcc\xa6\xe0\xc7\x81\xe6\r%_\x05w\xebp\xa6\x9f\xd0\xef#\xf7\\\xaa\xcc-$8A\n\x1cZ\x1e)vb4\x90\xfc5\xa4\x94\xb7\x14\xa9\x8bBK\x02\x13L#qTIE0\xb4)\xd4\xc2\x13I\x1b\x8a\x12\xf4S\x1e\x85\xba\x92C\xe9-%\xe8\\\xe4l)\x19~\x1a\x89\xf9\x94E\xb0\xa4[J\xb0\xe4\x96\xbd\x0b\x9e\x99\r\x9a\xc1Mc\x96F\x14\xc6\xba\x10\x16k\x95lY\x98\xf4\xcc\xd0\x80\xb3R\x81 TV\xc7\xa2\xc5f\xb6\xa3\x01!\xafZp\x97p\x9d5)\x8d;c\xe8\xe1\x1e\xed\x1a{\xec\xb7\xd0\xe1\xcc\x04g$\x9eZ\x05\x97\x15\xc5I\x19\x19\xac\xc7%\x81\xf8\xe8\x8f\x14\x93\xb7"\xa5\xcd.\x8e\x98p\xfb=(\x0c\x02\x00h\tn\xc0S~\x96=&gt;\xcb\xce3\x1efL\x91+w\x0f\xc7\x8a\x8fsZ`\xb4\xd8\x1b!r[\xe8\xb7\xc5\xa3m^\x14F\x8e\x95\xcdu\xac\xbb/\xc5\x11\x1e\x85s\xb8\x8589\xc6\x8e\xda"\x159/\x07&lt;\xe1\x8a\xb4gbki\xe6 \rJ\xcc\x1c\xb5\xe1\xea\xe4iy#\x90\x08RK\xb2 \x9c\x9d#\xa6\xc7\x8aM\xca\r\xd6\x03\xc5\xa1\xf9I\x98\x13\xd9r\x99\x8bs\xdc\xe78\xef\x00}J\xcb\x86a/{\xb7\x90\x07\xbf\xd5C\xe4m\xe8\xec\\j+gi\xf8\xc7\xbc\xc3{\x93p\x15R\xc5\x0c\xd9\\\xe1:\x817X\xaa\xe1\x9e\xe1\x931`:\x96\xc1\'\xd5g\xe1\xff\x00\xd3B\x95@\xf7T{\x8f#\xbf~j\xb6\xf6-\x1e\x8a\x8dH&amp;L \xe2\xec\xcc\xc6\xbfqi\xe6\x16\x8cF*\x8b\x19/pm\xa2\xfb\xcf\xba\xe6a\xeb\xb1\xecs)\xd5\x15?S\x9b\x7f\x13[b\x1b\xd4\x0b\xdd^\xd23\x9aM\x1c\xd7\x14\x0er\x8fJqY\xd9\xccYr\xa2\xe4\xa2\xa1E\x82e\xb9\xc9n*\x14\x05\x16\x16[\x8a\x02T%\x01)\x8e\xcbQ/2\x88\x0b\x15(\x9a\x14`OkP*#\n2U\xb1\xaa\xde\xd4\x05\x17I4\x84\xb6Y49\x02\t\xacD\x02\xb2P\x92\x80hcQ&gt;\xbe@\\LG\xba\x8d\xd1r8\xfdS\rn\x83^\xe5I\xa7\x14nF\xacK\xdf\x91\xcedK\x86\xa7K\xeaV\xaf\xe9\x8e\x1c\xe2\xcc\xcf&gt;#\xcf\x97\xe5\xd6n\x19\x8a\x0f`\x04\x02D\x08\x98\x08\x7f\xa8x\xbb\xe8\xb1\xac\xa4\xe0\x0e\x84\x8dz\xc2I[\xc4\xed\x93\xa5g\xa6\x7f\x0fcl\x0c{\x13\xe6\xb8\xa3\xfa}\xad\xad\xf1&lt;F\xf3\x00\x90A\xee/\x0b\x83\xc0\xb8\xe5g\xd4\x0c{\xe5\xa6\xe7\x9d\x97\xba\x153\xb6A\x82\xdd\xc4\'(\xe2\xe9\x12\xa5j\xcd\x07\x0e\x0bu \xc6\xeb\x86\xccq\xf8\xaf\xa2\xf8\xbcew\xfc\xa2\xd3\xdd.\xb7\x1a\xce\xc7]\xd2\x1d\x13\xce;/7S\x17\x9e\xa1v\x84{\xa5\xf8-F\xd5?\'\xacK\xc7?\xc29\x0fu\xa2\x97\x89\x8d\x7f\xfb4\x1f=\xd6\x8c\x16\x17\xe284\x89\x1a\x9e\xc9\xb8\xe4\xb4q\xc1\xfd9\xd3&lt;\xb5\x0cW\x8c\x8d\xa3\xd9tp\xf5C^\xe3k\x91\x03\xc8JO\x1f\xe1B\x9dL\xd4\xc1\xcam\x0b\x05*\x84\x1b\xea\xa5\xacY\xda\xda\x92=\x1bx\xa4\x00\x01\x03\xae\xe8\x9f\x8dkAu\xc9\xe6W\x92\xe3\x99\xf2\x02\xd2u\x13\x1c\x96\x1aU*\x91\x94&lt;\x96\x96\xc8:\xe8D\x8e\xe2B\xd2)\xc9]\x99V\xe8\xdd\xc7\xf1F\xad\x8e\xbb&amp;\x7fB`O\xf79\xdd\xa3\x1a\xed\xf7p\x8fK\xcf\x92\xe4\xe18uJ\xaf\x0c\xccA\x99\x9e\x93u\xdb\xc3\x16Q\xaa[D\xba\x0f\x86s\x12$\xd8\x91\xca\xea\xdc\xb1T,[gw\x1e\xd0\x1e@\xee\xb1\x94\xdcS\x8b\x8c\xa4\x00\xb3\xb3\x92]\x94\xe0\xa8"}\xd4\rLHS\xc2S\x8a:\xb2\x96\x1a\xa4u\xb0\tT\xe5ob\x17\xb2\xc9\xd9X\x8bQ\x0f\xc3Q\x16,H\xc4\xf6=/)\x16(\xd8\xc4\xc9\xd9\x7f\x11\x18z\xa6P\x92\x9fS\x08[}\x94\xb9$\xe9\x862{\x12\x1c\x9c\x1d\n3\x0eH\x98V(\x12\x8bA\x8b\t\xb5B\xa0\xf9*\n\n\xdbE\x02\xa68&gt;\x17\x07\xfa\x82\xa7\x8c\x0e\x9f\x9e\xcb\xbe\xdaR\x15b8#+\xe5/qn]\xdb\x12G+\x846\xa2\xed\x9a\xf0\xeaG\x99\xe1\xd9\x9a\x0b\x81\x8b\xfe\x14\xee-\x88\x0f-l\x19t\xc1\xdac@{\xae\xdf\x10\xe0\xed\xa6\xc0\x18\x0ck$\xcc\x95\xc7\xa1D\x97\x86\xbb@s\x0e\x99H$|\x93\x8b\xb9Y\xd9V\xb4q\xf0a\xedx\xca\xdb\xca\xef\xbf\x89\xd5xm&amp;\x10\xdc\xe2^\xed\xc3\'\x9e\xd6\xf3N\xc0Scj\x07\x1e\x9e\xe5f\xc6\xd04\x83\xf4\x978\x81\xcf 2=m\xddi$\xbb\x07\n\xd0\xd6D\xe5n\x9f\x90\xb0\xf1\x0c\x0b\xe9\xb8\x1c\x8e!\xe2[\x00\x99\x8b\x11\xdf\xee\x17C\x83P\xf1\x02u_N\xc3\xe1\x98\xfam\x04~\x91b,E\x96pV\xdd\x0er\xc5#\xc6p\xa2\xf1A\x8dx \x80ld\x18\x9bX\xe9oe\xe90\x0c\xc9O6\xee\xf9\x05\xce\xaf\x83w\xc5\xc8\x01&amp;{\xae\x96.\xb6_\x07+-"\xab\xb3\x8d|\xa4\xe4r8\x849y\xbce;\xca\xefb\xdf\x1b\xaeF%\xe0\x02O\xe5\x962\xec\xe8\x89\x94Vi\x19]\xa4.]\\+\xa98=\x82A\x07\xa8\xed\xad\xf6\xf4O\xaa/+g\x0bc]\xe1u\xe7\xe5;\xa7\x16\xe3\xd1M\x1b8&amp;*\x91px\xb1\x1a\xb4\xecb\x08=\x16\xd7\xe1X\xc7\x13\x90\x07k1\x1a\xf7\xd1i\xe1|\x02\x96p\xfb\x92;Y?\x8fP\xc8\xf9\xd9\xd7\x0bY|\xa3m\x18\xf2\xcbZ9\xc0\x84\x87j\x88\x14%dsX\x0f\xb2\x16\xbe\xca\xea\t@\xf0\xa8\x01s\x92C\x93\x9e,\xb39\xc9X\x05(*\x12\xa8&lt;\xad\x14\xa8f\x12\x93j*\xd9qR\x96\x91\x96TZ\x1dADg\x10\xa9\x1b\xaa1\x8e\'\x9f4\x8aTo\xd3\x9a\x90f\xebA}\x80\x0b\x9d9ER:\xe4\xa3=\xd5\x14)\x10\xb5g\x11u\x988\x82\xad\xa2\xf1\xcd\x12ND\xc6\xa2\xcd\xd8f\x88Mm\x00\r\x82S\x08\x02\t\xba#[.\xeb\x1byh\xe9Q\x8a\x8d\xc8^\'\r{\x04\xa6\xe1\xdc6ZY\x8a\xcd\xaa\xd3\x87\xa83-e\xcb(\xe8\xc1pFV\xd32\xd2\xc3\xca\xdb\x87\xc2\xc6\xba\xa1}a&amp;\x13\xa9\xbc\x9b\xe8\x9cy\\\x9aA\xf4T;\xecG\x14\x8c\xb0\xbc\x95S\x95\xdd\xec\xbd\'\x11\xaf\x00\xaf9\x88\x83\xee\xba\x1c\xbeZ/\x8e\xd2\xb19\x0836I\xc5U/t\x9b\xf2\x9d\x827S\xbd\xb4H\r3\x1dtM\xca\xcde+\xd5\x1d\x1c\x03\xf2\x90N\x9f\x9a\xafq\xc28\x8d\x80\x95\xe0(\xb8\x8bL.\xe7\x0c\xc5\x11\x06\xca\x14\x9ceh\xceQ\xc9\x1e\xe5\xf0\x1c_i\x88\x95\xe7\xb1\xd5\xbcS\xcd2\xa7\x11\x96\xe5\x95\x82\xadI\xd1k)&amp;\xb4c\x8d\x00\xfa\x80\xd9s\xebafcM`\xad\x8eJ{O\xf8\xeb\xcb\x9a\xcckG\x1a\xae\x1e\xfa\x11\xa8\xf3E\x84\xc2\x90\xf9m\xb6]1Q\xa4\xdcA\x9d\xfa\xdb\xec\x88@\'\xbe\x9e\x83\xe8\x98\xec\xf4\x1c)\xe1\xad\xd6N\xebG\x1b\xa4^\xc6\x9eG\xe8\xb9\x98\n\xd1\xd5t\xf8\x8b\x8b\xa9@\xd4\x91\x1f5\xa3\x97\xc1\xfe\x0c\xf1\xcaI3\xcf3\x08F\xab=Q\x04\xae\x85\x1a\xa7,&gt;\xc4!\xaa\xd6\x9d\xa5r\xc7\x92^J\xe4\xe1\x8au\x13\x9a\xc7\x08B^%nm\x10\x01\x80\x84\xe1\x98D\xee\xadOfO\x89\xd1\x96\x98k\x8d\xd0b\xf0\xed\x89\x08\xce\x1a\x0e\xa9\xc7(\x11\x13e\x13o$\xd3.\x11N.-\x7fg\x1a7L\xa7T\xe8\x13_H\xa7R\xa6\xd6\xf7U9*#\x8a\x0f/F2\xd7\xa8\xb6\xfc@\xa2\xcf7\xe8\xdb\xe8/b\x18\xf2Si\xd4 \xdc%1\xaf\x1d\xca*\x95\xc8\xd7\xd7C\x0bK\xbd\x10\xa1j\xeff\xdaE\xb6\'R\x9f\x00x\x9b\x13\xd5s\x9a\xd9\x12\x9a\xe7\xb4\xc6Py,\xa7\x16\xba:8e\x19I)#\xa2\xdaE\xf2`\x03\xcchR+S \xc75)\xb5\xcc\x008\xefoto\xc4\x83}\x08\xb1%Df\xd1\xaf/\x06N\xd3!\xa6D\x08\xba~\x1e\x93\xaf\x9a\xdc\x96gb\x89\xde\xfc\xd4{\xcb\x9aA\'\x94\x8d\x91+\x93\xd11\x84`\xb6\xc8j\xe5qi\x0b~\r\x84\x82\xfb\xe5\x02&lt;\xd77\x0fBr\xb5\xc4\x99\xb4\x9d{.\xfb\xd8\x19O(\xdb\xddo\xc5\x05w\xe8\xe7\x94\xa4\xde\xdd\xa3\x89\x8e\xbc\xfe\xcb\x89\x89\xa7\xd7\xcbI]\x0e#X\xe8\xb8\xa5\xe7\xdd_l\xd6:F\x86u\xd5Si\xc9=\xfe[\x15\x9f\xe2\xc6\xea2\xae\xb7\xd9:\x0b,k{rZhb\xfe\xcb\x90j\x17h\x9c\xc7\x10\x9b\x88\xd3;\x9412\xe2\xba\x0c\x98\x95\xe7\xb8uO\x13\xbb\xafA\x86x-\xba\x14h\xceL\x95^\x00\xb9\xbf-V_\xee\xa0\xccXs[\x83\t\xfd0\xdfu\x93\x89\xd2-g\x88\xcc\x8dO\xd5\x15\xe4\x9d\x08k\xc3\xa1\xdb\x03\xef\x13\xe8}\xd4\xc5U\xca\xf0\xed\x9c/\xb4\x1d?\x7fU\xcc\xa6\xfc\x844zs\x9d~\x89\xf5\xab\x82Z\x0f\xfb\x0b\xfa\xd8\xa0\x0e\xfe\x03\x12\t\x00\x8b\xae\xe7\x10\xa7\x14\x83\x86\x80\xed\xd4/9\x80{\\f$\xce\xab\xd5a\xc0s\x0bcQ\xbd\xef\xb1V\xa3\x94\\}\x93\x962RG\x9b\xc4?4ok\xa7d\xc8\x01\xd7\xd9dxt\xc0\xb9\x9f\x9aS\xea&gt;@\x99\x13\xa1\\\x8f\x8eUI\x8e&lt;\xa9I\xb9.\xc7\x7fpD\x88\x80N\xe8)\xd6\x04\x99\xdbd?\xdc\x9b\xb5\xc33H\xf3\x08(\x80$\xf9\xa3x\xba[+JJ\xdd\xa0\xf1R#-\xc1\n\x9a\xcf3\t\xa6\xb3\\\xc9p\xb7\xd5fep \x89\xd4\x0b\xfd\xd4\xa7&amp;\xbe\xe55\x18\xc9\xb7\xd3\xe8e0\x01\x19\xfb\xac\xf5j\x02I\x1a+\xae\xe1\xac\xeb\xb2C\x0bf\x06\xbe\xaa\xe2\xa9\xdb\x07\x17%Q@B\x89\xcd\xa29\xaaO$G\xd2b\xe9Up\x04\xdevw\xdf\x98F\xf7\x97\x10\x1f~R&gt;k\x1b^Yw:{n\xb4a1\xc4\xbc\x93a\xcc\xf6\xfeRk\xcaGJN\x9b\xbd{f\xaa\x0c\xceK \xdaD\xc5\x932\x16\x990=\xcf\xd9!\xaf.q\xf1\x12\x05\xf7\x03\xf7[\xe9\xd7\x19\xa1\xc5\xa4D_e2n\xa8\x88\xf1\xc55/B\x1a\xf2\xed\x01=\x84\xdf\xba\xd0@$\xe7i\xea\x05\xfc\xca\xcd\xf1\x80\xb3I\xd6\xd7\x81\xa9\x8f\x92k\xb1\x04]\xdd\xc1m\xce\xbam)b\xee\x8a\x94\xe2\xe2\xda\xf69\x94\xd8Z\xec\xa0\xdb\x9f\xee\xa9\x98W\xc9 \x87\x02\x7fO/\xd9,\xe2\x06\xad\xeegt\xc7\xbd\xc2\\\xd1r,d\x13\xfc\xdd\r\xca$\xc6&lt;|\x8e\x93\xa6m\xc3\x165\xc5\xa7\xc4\xe6\xeey\x8eA7\x17_\xc3\xdddn\x85\xe4\xde \xccL\xf5R\xa3\xa4\x03\xaa\xe8\x83\xf8\x99J5*\xf4r1l\x0b\x15Z"\t[\xb1m\x93q\xfc,X\xa7\x8c\x85\x08\xb7\xd1\xc6}C\x990\xbf\xc0V2\xe8*\x1a\xd6!o\x89\x9eGC\x04\xd9[\x0b@\xd5b\xe1O\xb2\xd9\x8a\x1e\x03\xcfYY\xbe\xcd#\xd1\x8d\x95a\xf1\xb2\xf48:\x9e\x19\x9bJ\xf1\xaf\xa9\xe2\x05w8^,\x1f\t\xd7eN:3og\xaa\xc2T\x958\xee\x1f=\x13\xcc_\xd2\xeb\x1e\x1d\xf7]j\xcd\xcdM\xcd\xff\x00\x89\xf6J/\xc0\x9a\xf2x\'\xbf\xae\xca1\xf9\x9c9\xa1\r\x13\xf2Z~\x0eP\x1d\x08\xe8g_\x85\xbe\x0c/]\x83\xa8Dr^\x1f\x0bS\xc4\n\xf5\xfc\x1d\xf2!8\xbd\x92\xd1\xca\xe25\x8b\x1e\xe8\xff\x00o\x92\xce\xf7\x12s\x10D\x89\xe5\xd8\xad\xb8\xfcSIy\x00\x17M\x89\xd0\xc7\xd3\xaa\xc3R\xa0\xd0\x9e\xc0i{w\\\xf9,\x9bH\xa9qj\x9c\xb7\xe8w\xc4cZ\x04\x02H\xb9\xef\xa5\xd7;\x11S \xcd\x02gMm\xce9#\xf8\xa0\xda\xd6\x13\x07\x91\xd3\xb2\xe7\xd5\x0es\xa7\x97S\xa4\x98\xd3\xc9Dr\xd9\xd3\xf4a\x16\x9c\xda\xa5\xd7\xdc\xed\x1a\x01\xec\x06\xccq\x89\xb9\x8fD\x9cM\x1c\xad\xbd\xe7\xfdt%`ewxA6\x89;\xdf\xa7E\xa0S~Y%\xe4m1\x04la%\x19.\xc8\x97\xd2v\xe2\xc5\x87\xc4\x88\x04\x8ej\x99\x16\x81s\xf2L\xce9\r\x01\xb8\xfb\xf5PVh\x00\xb7S\xb6\xb7\xdc\x84;\xdbh\xd7(R\x8f\x1e\x8a\xf8*+\xf8\x93\xa9\n%\xb2j\x1fo\xf2s\x9c\xf9e\xc0\xcc \t\xdfk\xc7\xbfELy7\x1aF\x83\xd3\xd5@\xe3\xbf\xdf\xf3t\xfc0`\'0$\x130\x0cN\x9e\x9b\xae\x94\x94N79M\xd3e\xfcC\x161\xf4\xf2&gt;k=7\xc5@\x7f\xc6 \xeb\xae\xc7\xdb\xd5tFH\x0e\r7\xff\x00\x12d\x9dtY\xeb1\xaeq,1\x17\x83h\x1d\xc2I\xfd\x8b\xc5\xc7m\xda\xfc\x81Q\xe4\x83\x96yX[\xf6\x99\x8f5\xb73\x83n\x04\x86\xcc\x89&gt;\xa65Y\x99K)\xccL\x9e\x9dB#\x98\xeaH\x8d\x07E2\x8d\xed\x07\x1f&amp;\t\xc5\xa2\xd9X\x91k\x11\x16&lt;\xb9-T+\xc3\xe74_,\x1f\x99\xf7H\x0c$\x12\x00$\x19 \x98:}\xc2\xa1LD\x90d\xdf]:D[EZ2J\x95\x9a\x9f\xc4\xe9\xb5\xa6\x1aI"\xe4\xc9\x9b\x8b\x98\xd3t\xeaX\x82\x18&lt;0yrY\x18\xc0\x08-%\xa4\x8dG\xcdl~&amp;\xd6\'O^\xa9I\xb5\xd25\x84\x94\xbfs0\xe2*\x97[\xcdr\xb1\xf5\x00\x19A]\xe2\xcc\xc4\x1d\xc8\x93m\xed\x03\xd1c\xa3\x80n|\xcf\xb3sL\x8d`Lyh\x9c]m\x8eR\xbf\x8a&lt;\xe6\x13\x0e*T\xc8\xe7e\x90\xe8\xff\x00\xb4\x18\x9eC\x7f%\x8d\xf4_.\x05\xa4\x16\x98 \xf3&amp;#\xeb\xd8/gW\x84Sl\xbd\x84\xde\xc0\x11\x1f\xe4\x0c\xfd\x13\x18\xe7\x01\x12\x1b\x1aH$\x99\x16\xb4~@W\xf5wk\xa18\xd4i\xf6\x9f\xfa&lt;\xdf\x0c\xa6o\x02G?8\x9f\x92\xdf^\x83\xe2\xedtv+\xd2a\xa8\xbc\x8c\xedkL\x0f\xd4D\x93\x16\xb0;k\xe6\x93\x89\xc5\x17\x12\xc7\x88\xed\x02\xda\xc9X\xcb\x99\xb9TQ\xacb\xa3\x1bl\xf0uhK\xa0\x98\x12\x07\xfe\x8c\'\xd3\xa6\xe68M\x88w&gt;\xc3\xdeW\xa1\xfe\xd1\xae:\x07I\x91\x02f7\xf9\xfc\x92\xdf\x86\x0e$\xeaE\xc8\x89\xf3\xf5]*z9\\\xad\xe8\xd1\x86\xaeu\x1b\xc4.\xfe\x06\xa9&amp;\n\xf3\x94_\x91\xa0\x91\xfaH\x1e\xeb\xb3\x86\xc7\x80\xd6\x90&amp;u\xed\x7f\xa8\xf4Y\xad2\xf3L\xf2\xd8\xcaykT\x11\x039\x03\xc9\xdbyJ\xdc\xc7x\x08p\xe5\x1d\xef\xfb-X\xaa!\xe4\xbc\xb4\x98\x89\'\xaf\xf1\xf3D\xcc!\xc8]\x06"\xe2\xfa\xff\x00\xb7\xb2r\x94IM\xbe\x8cX1\x04\x87s^\x83\x83b\xb2\x98\xd6#\xddq\xb2K\xbe`r\xdf\xd6V\x9c\x16(1\xe0\x91\x12n&gt;S\xda\xc9];\x1cev\x83\xc4\xb8\x17\xb8\t\xfdO=\x84\x9d&lt;\xa1*\xa1\x8do\xd6\xf1\x1bB,i\x97f\xb3s\x1c\xfd\x9aIw\xd5gs\xdd\xaf\xb6\xde[XB(\xc5\xb0\x98\x06\x80\t\xd3Aqr\xa5F\x89\x16\x83i\x1d\xadt\xb0\xfd$\xe9&gt;{\x15Oy\xbcr&gt;\xbb{J\x85\x1a\x95\xd9\xbc\xf9\x94\xa0\xa2\x90A\xfa\x1d/\x16\xb7;\xfc\x94~ \xe9\x98\xf3J&amp;!\xad\xf5\xd2Gd\xb8\x06\xe6\xd1\xeb\xb5\xa5Y\x87\x90\xde\xf9\x172{\xe8\xb3\xd6\x02`\x1d\xa4\xf4\x10\x7fd\xd2F\x9a\x01\x7f]\xbb q\x17\x13\xae\xa7\xf3\xc9\x08m\x0b\xce9*M\x86\x8dO\xb7\xd9D\xaf\xec^\x0b\xda,47\xc4y\xff\x00)\x80\xb6g\xa5\xba\xfeJ&amp;Q\x01\xb2\xeb\xca\x1a\xa0\x08\x8d\x12SM\xd0\xdf\x1c\x92\xc8\xd9\x87\xd2\xcd\x13\xd7XC^\x9br\x97\x86\xee$\r\xfa\x8fU\x99\x98\xa8\x04\x8f\xcei\x8c\xc4KH\x8b9g(\xcb+F\xeb\x93\x8d\xc3\x16\xb7\xff\x00H\xc7\x90D\xe8-\xe5\xaf\xd5\x1bjxm\xae\xdf\xbaC\xa4\x1b\x03\x1b\xfe\xcb@`\x88\xb0\xfc\xb2\xb6\x8ca\'z \xab=N\x84t\xee\xae\x9dH\xb6\xd37\xec\xab\xc3\x94\x99\xd3\x96\xe9\xec\xa3\xe1\x1as\x17\xfa%t[\x84\xa5n\x8b\xa4A!\xb1h\xd7\xeb\xf9\xcdJT\xad-&amp;f\xc7\xa0\xfd\x95\xd4\xa7\x97,\x18\x91\'\xec\x90w\xca|\xba&amp;g^MY\x0c\x01\x9aA\x13\xaf\xba\x10\x1au\xbe\x829\x1e\x93\xaa\xcfA\xc4\x98\x87A\x9f\xce\xc9\xef\xa4\xe6\x00\xe9\x02/c\xa2\x97$\x87\x18\xde\xf6\xcd,"\x08\xcal\xddO1\xbfD\x972\x03a\xd9\xa0Lr\xbc\x8f5t\x9e\xe1\xe2\x16\x9fn\xc9o7&amp;"A\xe9u)5\xe4\xd2m:T\xf4\x86\xbb\x14\xe6\x80\xd6\x9b\x81\xcfRPV\x82\x0b\xb3A\x98v\xf7\x8d\xbf7UF\x86\xf2l\x14\xaf\x87!\xa4E\x88\x07_\x9c\xa6\xb8\xd4v)\xf2g\x15\x14\xaa\x83{\xc3\x80 \x8b\x08\xe9\xa0\x80\x83\xe12m\x7fx\xd6\x12\xbe\x04\x0bi\xe8\x10\nF@;Xu\x1d|\xd5\xab0t\x99\xae\x93\x1d&amp;\x00\x90\x0b\xa3r,#\xdd\x1dWC\x03\x86\xa4\xc6R,"\xc7E\x8f\xe1\x90\xe9\x9b\x83\xaakd\xe6.2b\xc2l.\xa5\xc6NVi\x19%\x16\x8auR\x06Q\xceO\xca\xdd\xbe\xe8\xabW\x90.fn\x07!\xb8HuI\x80\x04\x10P\x9a\x85\xc4\x80:Lk\x1c\x90\xd2n\xd8\x93\x92M\'\xa2\xd8\x0e\xb1\xfc\x1bz\xa3\xa9HH\x04\x0e\xea\xdf\x98\x8by\x03\xb7\x92Vp\xd2u\x97_\x9fB\xae\xdf\x81c\x8fv\x87\xd5\x13\x17\xdaz[\x9a\xce\x1d{[\xae\xa0\xa61\xf37\xec&gt;\x88\x1c\xed\xe3KD*\xb36\x84\x96\xc8\xf3\xdb\xf3\xf2P\xcfq\xb7\x91\xe6\x9c\xeaw.\xe7\x13\xaf\x92\x8d\xeb\'\xae\x96\xb5\x92\xb1\xe2!\xc0\x8d\xcd\xf9\t\xbf\xd1if\x00\x9b\xe6\x13\xd8\x95\x9c\x1c\xb2Z&amp;c[\xed\xaf}\x10\x8a\xaem\xcb\xbfT\x9e\x80m\n%\x9f\xf1\xd1\xd1\x08\xf0\xff\x00&amp;\x03\xf0o\x0f\r$\x92n"\xcd\xf9\xf2F\xfc\x0b\xc5\xc1\x07\xcf\x97\x92]Z\xefv_\x14F\xe2\xf3\xd0\xa6\x7fp\xf1\xa6\xff\x00"\x8f\x9e\xba\x06\xb8\x9d\xdb\x7fc\x1a\x89\xd9\x9cT[Y\xcaSj\x98\x85\xb1\x94\x9c\xf1\xb4\x05\xce5`\xd9\x1f\xc7#Ce\x9b\x8f\xa4u*\xaa\x93\x1a\x04:\x0c-t\x9e\x01\xd9s\xd8m)\xac\t\xb5\xad\x99)T\xad\x1b\x18\xf0N\xba%\xb5\xfe+$8F\x88\xda\xe4P\xb25\xba\x9e\xa4\x04.}\x87-\x12\xe9\xd4\xb2k"\xd6\xf3SW\xa6\x8arKqe\xba\xa0tI6\xb2`x\x00\x11\tU\x1e&amp;@\xf4V\xddUx#\xa7\xec{j\x1d6T\xfa`\xd8\xf3T\xe3-\xd0\x84\x02\xb6k|\x8a\x87\x14\xd1jm:\xbd\rv5\xa2\xc1\xa1\xd0\xb4&gt;\xbc\xb0\x12 \xac4\xc8i\xda\x13)\xbb19\xbc\x96K\x89\xa9_\xa3\xa7\x93\xf5\x10\x94qJ\x83&amp;\xd2&amp;\xfa\xa7a\xf1\x01\xa2"LF\xb6\xf4V\xfa\xb2\x00\x00Xl\x95H\xd8\x95\xb3V\x8eH\xbav\x99Uj\xe6\xb6Q\xe5d\x0f7\x07a\xee\xad\xee\x129\xadT\xc3\x08\x83s\xcd,\x94P\xf1r\x91\x85\xde\'|\xc2\x85\xd3c\xb2{\xb0\xe0X:\xe8\xf33)i\xf5\xea\x97\xd4E\xaf\xd3\xca\xf6)\xef\xb0\xcae\xc2\xd2{&amp;a\xb0\xe7,\x82\x07S\xba\xc7U\xa1\xa6&amp;m\xdb\xcd%\x98\xc79\xb9@\x80\xdb\x0ee\x1c\x9b_\x13N\x087/\x96\x8d\xcf\xc2\x16\x9c\xf2\x1d\xcf\x98\xea\xb39\xed6\r\x8e\xa56\x8dBE\xf5\x84\x972\x0c\xe8\x97\x15\xb4\xec\x7f\xaa\xd4\x92\xbb\x16\xd7\xc1\x9f\xe29\xa6\xb6\xa5\xa7\xc8\xc2\xb1\x974\xc6\xc8\x83\x9aI\xbd\x95\xb9\xb5\xaa0\x8f\x1aj\xedY\x95\xf5\xc8&lt;\xc2\x82\xb4\x8b[\x7f\xd8#u\x16\x89\x97n\x96\xdc1\xff\x00\x12;tM4\x89i\xb7@\t:m\xbe\x93\xf7E\x88\xc3\x92\x7fP$\r6\x08]O)\xd5G:\x01\xbd\xcan\xdb\xd3\x05\x8a[3\xe43\x07\x9d\xe3\xa2"\xc9\xbc\xe9\xb7\xd5M \xab\x0f\x00\xa6\x98\x94m\x89sJ\xb4N\x95\x13\xb1\xe0e;\xa7\xd2\xd1E\x13d\x8cf\x8aSV\xa2L\x06\xb7To\xd1E\x12\x027T\xfd\x94Q\x08\x90h\xea\xad\xdf\xa8(\xa2\x99to\xc3\xdf\xf4iJ~\xca(\xa5v\x89\x91GO4j(\xaa&gt;H\x97\x80\xa9&amp;\xb7O5j*BBF\xa8\xda\xa2\x8b)ti\x0e\xc6;\xe8\xb1T\xddE\x16H\xec\x8f\xee@c4\t,\xfdAZ\x8bU\xd1+\xb7\xf95\xb1\x05}TQTz8\xf9;#\xbe\x89J(\xac\x90\xaaj\x81\xca(\x81\xb1\x0e\xd5$\xaaQ\x1e\x85\xec*\xba(\x14Q\x0f\xa2\xa3\xfb\x86\xb5E\x14Y\x9dG\xff\xd9\r\n--c87827f916733a74fbb0565b8a06fd33--\r\n' 
 </msg>
<msg timestamp="20220714 19:46:48.161" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet/9843217/uploadImage 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:48 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":200,"type":"unknown","message":"additionalMetadata: null\nFile uploaded to ./dog.jpg, 5765 bytes"} 
 </msg>
<msg timestamp="20220714 19:46:48.162" level="INFO">C:\Users\janardan\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'petstore.swagger.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220714 19:46:48.164" level="INFO">${resp} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:47.041" endtime="20220714 19:46:48.164"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20220714 19:46:47.032" endtime="20220714 19:46:48.166"/>
</test>
<test id="s1-s1-s1-t2" name="Add a new pet to the store">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{category}</var>
<arg>id=101</arg>
<arg>name=tuffy</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:48.179" level="INFO">&amp;{category} = { id=101 | name=tuffy }</msg>
<status status="PASS" starttime="20220714 19:46:48.174" endtime="20220714 19:46:48.179"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags}</var>
<arg>${category}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:48.182" level="INFO">@{tags} = [ {'id': '101', 'name': 'tuffy'} ]</msg>
<status status="PASS" starttime="20220714 19:46:48.181" endtime="20220714 19:46:48.182"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{photoUrls}</var>
<arg>${photoUrl}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:48.183" level="INFO">@{photoUrls} = [ https://petstore.swagger.io/v2/pet/9843217/uploadImage ]</msg>
<status status="PASS" starttime="20220714 19:46:48.183" endtime="20220714 19:46:48.183"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:48.185" level="INFO">${Header} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:48.184" endtime="20220714 19:46:48.186"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>id=101</arg>
<arg>category=&amp;{category}</arg>
<arg>name=doggie</arg>
<arg>photoUrls=@{photoUrls}</arg>
<arg>tags=@{tags}</arg>
<arg>status=available</arg>
<arg>headers=${Header}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:48.189" level="INFO">&amp;{req_body} = { id=101 | category={'id': '101', 'name': 'tuffy'} | name=doggie | photoUrls=['https://petstore.swagger.io/v2/pet/9843217/uploadImage'] | tags=[{'id': '101', 'name': 'tuffy'}] | status=available | hea...</msg>
<status status="PASS" starttime="20220714 19:46:48.186" endtime="20220714 19:46:48.189"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 19:46:49.138" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '292', 'Content-Type': 'application/json'} 
 body=b'{"id": "101", "category": {"id": "101", "name": "tuffy"}, "name": "doggie", "photoUrls": ["https://petstore.swagger.io/v2/pet/9843217/uploadImage"], "tags": [{"id": "101", "name": "tuffy"}], "status": "available", "headers": {"accept": "application/json", "Content-Type": "application/json"}}' 
 </msg>
<msg timestamp="20220714 19:46:49.138" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:49 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":101,"category":{"id":101,"name":"tuffy"},"name":"doggie","photoUrls":["https://petstore.swagger.io/v2/pet/9843217/uploadImage"],"tags":[{"id":101,"name":"tuffy"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 19:46:49.138" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:48.189" endtime="20220714 19:46:49.138"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${req_body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:49.140" level="INFO">{'id': '101', 'category': {'id': '101', 'name': 'tuffy'}, 'name': 'doggie', 'photoUrls': ['https://petstore.swagger.io/v2/pet/9843217/uploadImage'], 'tags': [{'id': '101', 'name': 'tuffy'}], 'status': 'available', 'headers': {'accept': 'application/json', 'Content-Type': 'application/json'}}</msg>
<status status="PASS" starttime="20220714 19:46:49.139" endtime="20220714 19:46:49.140"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:49.142" level="INFO">{'id': 101, 'category': {'id': 101, 'name': 'tuffy'}, 'name': 'doggie', 'photoUrls': ['https://petstore.swagger.io/v2/pet/9843217/uploadImage'], 'tags': [{'id': 101, 'name': 'tuffy'}], 'status': 'available'}</msg>
<status status="PASS" starttime="20220714 19:46:49.140" endtime="20220714 19:46:49.142"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20220714 19:46:48.171" endtime="20220714 19:46:49.143"/>
</test>
<test id="s1-s1-s1-t3" name="Update an existing pet">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{category}</var>
<arg>id=101</arg>
<arg>name=tuffy</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:49.146" level="INFO">&amp;{category} = { id=101 | name=tuffy }</msg>
<status status="PASS" starttime="20220714 19:46:49.145" endtime="20220714 19:46:49.146"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags}</var>
<arg>${category}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:49.147" level="INFO">@{tags} = [ {'id': '101', 'name': 'tuffy'} ]</msg>
<status status="PASS" starttime="20220714 19:46:49.147" endtime="20220714 19:46:49.147"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:49.148" level="INFO">${Header} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:49.148" endtime="20220714 19:46:49.148"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>id=101</arg>
<arg>category=&amp;{category}</arg>
<arg>name=doggie</arg>
<arg>tags=@{tags}</arg>
<arg>status=available</arg>
<arg>headers=${Header}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:49.150" level="INFO">&amp;{req_body} = { id=101 | category={'id': '101', 'name': 'tuffy'} | name=doggie | tags=[{'id': '101', 'name': 'tuffy'}] | status=available | headers={'accept': 'application/json', 'Content-Type': 'application/json'}...</msg>
<status status="PASS" starttime="20220714 19:46:49.149" endtime="20220714 19:46:49.150"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 19:46:49.707" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '219', 'Content-Type': 'application/json'} 
 body=b'{"id": "101", "category": {"id": "101", "name": "tuffy"}, "name": "doggie", "tags": [{"id": "101", "name": "tuffy"}], "status": "available", "headers": {"accept": "application/json", "Content-Type": "application/json"}}' 
 </msg>
<msg timestamp="20220714 19:46:49.708" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:49 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":101,"category":{"id":101,"name":"tuffy"},"name":"doggie","photoUrls":[],"tags":[{"id":101,"name":"tuffy"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 19:46:49.708" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:49.151" endtime="20220714 19:46:49.708"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20220714 19:46:49.145" endtime="20220714 19:46:49.710"/>
</test>
<test id="s1-s1-s1-t4" name="Remove an existing pet">
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{category}</var>
<arg>id=101</arg>
<arg>name=tuffy</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:49.716" level="INFO">&amp;{category} = { id=101 | name=tuffy }</msg>
<status status="PASS" starttime="20220714 19:46:49.715" endtime="20220714 19:46:49.716"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags}</var>
<arg>${category}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:49.718" level="INFO">@{tags} = [ {'id': '101', 'name': 'tuffy'} ]</msg>
<status status="PASS" starttime="20220714 19:46:49.717" endtime="20220714 19:46:49.718"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:49.720" level="INFO">${Header} = {'accept': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:49.720" endtime="20220714 19:46:49.720"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>id=101</arg>
<arg>category=&amp;{category}</arg>
<arg>name=doggie</arg>
<arg>tags=@{tags}</arg>
<arg>status=available</arg>
<arg>headers=${Header}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:49.724" level="INFO">&amp;{req_body} = { id=101 | category={'id': '101', 'name': 'tuffy'} | name=doggie | tags=[{'id': '101', 'name': 'tuffy'}] | status=available | headers={'accept': 'application/json'} }</msg>
<status status="PASS" starttime="20220714 19:46:49.722" endtime="20220714 19:46:49.724"/>
</kw>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_urldelete}</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20220714 19:46:50.281" level="INFO">DELETE Request : url=https://petstore.swagger.io/v2/pet/101 
 path_url=/v2/pet/101 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '183', 'Content-Type': 'application/json'} 
 body=b'{"id": "101", "category": {"id": "101", "name": "tuffy"}, "name": "doggie", "tags": [{"id": "101", "name": "tuffy"}], "status": "available", "headers": {"accept": "application/json"}}' 
 </msg>
<msg timestamp="20220714 19:46:50.281" level="INFO">DELETE Response : url=https://petstore.swagger.io/v2/pet/101 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":200,"type":"unknown","message":"101"} 
 </msg>
<msg timestamp="20220714 19:46:50.281" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:49.725" endtime="20220714 19:46:50.282"/>
</kw>
<tag>API</tag>
<status status="PASS" starttime="20220714 19:46:49.714" endtime="20220714 19:46:50.283"/>
</test>
<status status="PASS" starttime="20220714 19:46:45.754" endtime="20220714 19:46:50.286"/>
</suite>
<suite id="s1-s1-s2" name="US2New" source="C:\development\SwaggerAPI\TestCases\US2New.robot">
<test id="s1-s1-s2-t1" name="upload adding updating and removing pet">
<kw name="Uploading image of pet">
<tag>API</tag>
<doc>Here we are uploading image</doc>
<kw name="Create Session" library="RequestsLibrary">
<arg>mysession</arg>
<arg>${base_url}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<msg timestamp="20220714 19:46:50.304" level="INFO">Creating Session using : alias=mysession, url=https://petstore.swagger.io/v2/pet, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20220714 19:46:50.303" endtime="20220714 19:46:50.304"/>
</kw>
<kw name="Get File For Streaming Upload" library="RequestsLibrary">
<var>${file}</var>
<arg>C:\\development\\SwaggerAPI\\TestCases/dog.jpg</arg>
<doc>Opens and returns a file descriptor of a specified file to be passed as ``data`` parameter
to other requests keywords.</doc>
<msg timestamp="20220714 19:46:50.305" level="INFO">${file} = &lt;_io.BufferedReader name='C:\\development\\SwaggerAPI\\TestCases/dog.jpg'&gt;</msg>
<status status="PASS" starttime="20220714 19:46:50.305" endtime="20220714 19:46:50.306"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${files}</var>
<arg>file</arg>
<arg>${file}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:50.307" level="INFO">${files} = {'file': &lt;_io.BufferedReader name='C:\\development\\SwaggerAPI\\TestCases/dog.jpg'&gt;}</msg>
<status status="PASS" starttime="20220714 19:46:50.306" endtime="20220714 19:46:50.307"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:50.308" level="INFO">${Header} = {'accept': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:50.307" endtime="20220714 19:46:50.308"/>
</kw>
<kw name="POST On Session" library="RequestsLibrary">
<var>${response}</var>
<arg>mysession</arg>
<arg>/9843217/uploadImage</arg>
<arg>headers=${Header}</arg>
<arg>files=${files}</arg>
<doc>Sends a POST request on a previously created HTTP Session.</doc>
<msg timestamp="20220714 19:46:50.935" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet/9843217/uploadImage 
 path_url=/v2/pet/9843217/uploadImage 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'accept': 'application/json', 'Connection': 'keep-alive', 'Content-Length': '5908', 'Content-Type': 'multipart/form-data; boundary=bb4fc9a40a3be4913532ee3639e441cd'} 
 body=b'--bb4fc9a40a3be4913532ee3639e441cd\r\nContent-Disposition: form-data; name="file"; filename="dog.jpg"\r\n\r\n\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x00\x00\x01\x00\x01\x00\x00\xff\xdb\x00\x84\x00\n\x07\x08\x16\x15\x15\x18\x15\x15\x16\x19\x18\x18\x19\x19\x1a\x18\x1c\x18\x18\x1a\x18\x18\x19\x1a\x18\x1a\x18\x19\x19\x1a\x19\x1a\x1a\x1c!.%\x1c\x1e+!\x18\x18&amp;8&amp;+/1555\x1a$;@;3?.451\x01\x0c\x0c\x0c\x10\x0f\x10\x1e\x12\x12\x1f4,$+44446454444644444444444444444441444444464444444444\xff\xc0\x00\x11\x08\x00\xc2\x01\x03\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1b\x00\x00\x02\x03\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x02\x03\x00\x01\x04\x05\x06\x07\xff\xc4\x005\x10\x00\x01\x03\x02\x04\x04\x04\x05\x03\x04\x03\x01\x00\x00\x00\x00\x01\x00\x02\x11\x03!\x04\x121A\x05Qaq"\x81\x91\xb1\x13\xa1\xc1\xd1\xf02\xe1\xf1\x06\x14BRbr\x92\x15\xff\xc4\x00\x18\x01\x00\x03\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\xff\xc4\x00(\x11\x00\x02\x02\x02\x02\x02\x01\x03\x04\x03\x00\x00\x00\x00\x00\x00\x00\x01\x02\x11\x12!\x031AQ"\x13aq\x042B\x81\x91\xa1\xc1\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xf3\xed\x08\xc2\x10\x8d\xab\x90\xc86\x84`!j \x80,#hB\x02cB\x04HD\xd0\xaf*\xb6\xb5\x00\x1bB \x15\x00\x88\x04\x05\x96\x02\x80(\x11\x04\x01\x02 UB\x90\x8b\x0b\nTC\n\xe1\x16\x16IU*B\xa2\x11ae\x12\x84\x94D*!\x16+\x02U\x12\x8e\x10\x90\x81\xd8\x04\xa1%\x11BR\xb0\xb2\x8a\x02Q\x94\x04"\xc2\xc1%\x01DB\x12\x98\x02P\x94D!(\x1d\x8br\x12\x8d\xc1\x01\t\x80\x10\xa2\xb5\x10\x01\x80\x98\xd4 #\x01!\x04\n \x84\x04m\x08\x10mLjXj6\x84\x00a\x18B\xd0\x8c a\x05aPV\x02\x00%a@\x15\xc2\x04E\x01U\nB\x00%h@W\x08\x02\xca\x12\xac\x84\x04)\x02\xd0\x90\x88)\x08\x00\x14!\x16UD \x058 !4\x84\x04 \x05\x94%0\x84%\xa8\x01e\x03\x93KR\xdc\x15\x00\x05\tDZ\xa9\xcd@\xc5\xb9\x01L!\x01\x08\x01j"\x85\x101\xe1\xa8\xda\xd5mj0\x106\x8a\x0cMk\x15\x00\x98\xd0\x81\x14\x1a\x89\xadE\x95\x10j\x00\x80"\rP5\x10\x08\x11A\xa8\xc3\x11\xb5\xa8\x83QC\xa0CU\x86\xa6\x06\xab\x84\xe8T/*\x99\x13CT\x01*\n\x00SD)\xa6\x80\xa4\'C\xa1Y\x02\x17SN*\x16\xa2\x80G\xc3S\xe1\xadTp\xeey\x86\x82J\xebP\xe0\xc2%\xee3\xc8E\xbc\xd3Qo\xa1\xa8\xd9\xe7\xfe\x1a\x071z\x9f\xfem\x11\xb1&gt;e-\xf8\x1a&lt;\xa3\xcc\xa6\xe0\xc7\x81\xe6\r%_\x05w\xebp\xa6\x9f\xd0\xef#\xf7\\\xaa\xcc-$8A\n\x1cZ\x1e)vb4\x90\xfc5\xa4\x94\xb7\x14\xa9\x8bBK\x02\x13L#qTIE0\xb4)\xd4\xc2\x13I\x1b\x8a\x12\xf4S\x1e\x85\xba\x92C\xe9-%\xe8\\\xe4l)\x19~\x1a\x89\xf9\x94E\xb0\xa4[J\xb0\xe4\x96\xbd\x0b\x9e\x99\r\x9a\xc1Mc\x96F\x14\xc6\xba\x10\x16k\x95lY\x98\xf4\xcc\xd0\x80\xb3R\x81 TV\xc7\xa2\xc5f\xb6\xa3\x01!\xafZp\x97p\x9d5)\x8d;c\xe8\xe1\x1e\xed\x1a{\xec\xb7\xd0\xe1\xcc\x04g$\x9eZ\x05\x97\x15\xc5I\x19\x19\xac\xc7%\x81\xf8\xe8\x8f\x14\x93\xb7"\xa5\xcd.\x8e\x98p\xfb=(\x0c\x02\x00h\tn\xc0S~\x96=&gt;\xcb\xce3\x1efL\x91+w\x0f\xc7\x8a\x8fsZ`\xb4\xd8\x1b!r[\xe8\xb7\xc5\xa3m^\x14F\x8e\x95\xcdu\xac\xbb/\xc5\x11\x1e\x85s\xb8\x8589\xc6\x8e\xda"\x159/\x07&lt;\xe1\x8a\xb4gbki\xe6 \rJ\xcc\x1c\xb5\xe1\xea\xe4iy#\x90\x08RK\xb2 \x9c\x9d#\xa6\xc7\x8aM\xca\r\xd6\x03\xc5\xa1\xf9I\x98\x13\xd9r\x99\x8bs\xdc\xe78\xef\x00}J\xcb\x86a/{\xb7\x90\x07\xbf\xd5C\xe4m\xe8\xec\\j+gi\xf8\xc7\xbc\xc3{\x93p\x15R\xc5\x0c\xd9\\\xe1:\x817X\xaa\xe1\x9e\xe1\x931`:\x96\xc1\'\xd5g\xe1\xff\x00\xd3B\x95@\xf7T{\x8f#\xbf~j\xb6\xf6-\x1e\x8a\x8dH&amp;L \xe2\xec\xcc\xc6\xbfqi\xe6\x16\x8cF*\x8b\x19/pm\xa2\xfb\xcf\xba\xe6a\xeb\xb1\xecs)\xd5\x15?S\x9b\x7f\x13[b\x1b\xd4\x0b\xdd^\xd23\x9aM\x1c\xd7\x14\x0er\x8fJqY\xd9\xccYr\xa2\xe4\xa2\xa1E\x82e\xb9\xc9n*\x14\x05\x16\x16[\x8a\x02T%\x01)\x8e\xcbQ/2\x88\x0b\x15(\x9a\x14`OkP*#\n2U\xb1\xaa\xde\xd4\x05\x17I4\x84\xb6Y49\x02\t\xacD\x02\xb2P\x92\x80hcQ&gt;\xbe@\\LG\xba\x8d\xd1r8\xfdS\rn\x83^\xe5I\xa7\x14nF\xacK\xdf\x91\xcedK\x86\xa7K\xeaV\xaf\xe9\x8e\x1c\xe2\xcc\xcf&gt;#\xcf\x97\xe5\xd6n\x19\x8a\x0f`\x04\x02D\x08\x98\x08\x7f\xa8x\xbb\xe8\xb1\xac\xa4\xe0\x0e\x84\x8dz\xc2I[\xc4\xed\x93\xa5g\xa6\x7f\x0fcl\x0c{\x13\xe6\xb8\xa3\xfa}\xad\xad\xf1&lt;F\xf3\x00\x90A\xee/\x0b\x83\xc0\xb8\xe5g\xd4\x0c{\xe5\xa6\xe7\x9d\x97\xba\x153\xb6A\x82\xdd\xc4\'(\xe2\xe9\x12\xa5j\xcd\x07\x0e\x0bu \xc6\xeb\x86\xccq\xf8\xaf\xa2\xf8\xbcew\xfc\xa2\xd3\xdd.\xb7\x1a\xce\xc7]\xd2\x1d\x13\xce;/7S\x17\x9e\xa1v\x84{\xa5\xf8-F\xd5?\'\xacK\xc7?\xc29\x0fu\xa2\x97\x89\x8d\x7f\xfb4\x1f=\xd6\x8c\x16\x17\xe284\x89\x1a\x9e\xc9\xb8\xe4\xb4q\xc1\xfd9\xd3&lt;\xb5\x0cW\x8c\x8d\xa3\xd9tp\xf5C^\xe3k\x91\x03\xc8JO\x1f\xe1B\x9dL\xd4\xc1\xcam\x0b\x05*\x84\x1b\xea\xa5\xacY\xda\xda\x92=\x1bx\xa4\x00\x01\x03\xae\xe8\x9f\x8dkAu\xc9\xe6W\x92\xe3\x99\xf2\x02\xd2u\x13\x1c\x96\x1aU*\x91\x94&lt;\x96\x96\xc8:\xe8D\x8e\xe2B\xd2)\xc9]\x99V\xe8\xdd\xc7\xf1F\xad\x8e\xbb&amp;\x7fB`O\xf79\xdd\xa3\x1a\xed\xf7p\x8fK\xcf\x92\xe4\xe18uJ\xaf\x0c\xccA\x99\x9e\x93u\xdb\xc3\x16Q\xaa[D\xba\x0f\x86s\x12$\xd8\x91\xca\xea\xdc\xb1T,[gw\x1e\xd0\x1e@\xee\xb1\x94\xdcS\x8b\x8c\xa4\x00\xb3\xb3\x92]\x94\xe0\xa8"}\xd4\rLHS\xc2S\x8a:\xb2\x96\x1a\xa4u\xb0\tT\xe5ob\x17\xb2\xc9\xd9X\x8bQ\x0f\xc3Q\x16,H\xc4\xf6=/)\x16(\xd8\xc4\xc9\xd9\x7f\x11\x18z\xa6P\x92\x9fS\x08[}\x94\xb9$\xe9\x862{\x12\x1c\x9c\x1d\n3\x0eH\x98V(\x12\x8bA\x8b\t\xb5B\xa0\xf9*\n\n\xdbE\x02\xa68&gt;\x17\x07\xfa\x82\xa7\x8c\x0e\x9f\x9e\xcb\xbe\xdaR\x15b8#+\xe5/qn]\xdb\x12G+\x846\xa2\xed\x9a\xf0\xeaG\x99\xe1\xd9\x9a\x0b\x81\x8b\xfe\x14\xee-\x88\x0f-l\x19t\xc1\xdac@{\xae\xdf\x10\xe0\xed\xa6\xc0\x18\x0ck$\xcc\x95\xc7\xa1D\x97\x86\xbb@s\x0e\x99H$|\x93\x8b\xb9Y\xd9V\xb4q\xf0a\xedx\xca\xdb\xca\xef\xbf\x89\xd5xm&amp;\x10\xdc\xe2^\xed\xc3\'\x9e\xd6\xf3N\xc0Scj\x07\x1e\x9e\xe5f\xc6\xd04\x83\xf4\x978\x81\xcf 2=m\xddi$\xbb\x07\n\xd0\xd6D\xe5n\x9f\x90\xb0\xf1\x0c\x0b\xe9\xb8\x1c\x8e!\xe2[\x00\x99\x8b\x11\xdf\xee\x17C\x83P\xf1\x02u_N\xc3\xe1\x98\xfam\x04~\x91b,E\x96pV\xdd\x0er\xc5#\xc6p\xa2\xf1A\x8dx \x80ld\x18\x9bX\xe9oe\xe90\x0c\xc9O6\xee\xf9\x05\xce\xaf\x83w\xc5\xc8\x01&amp;{\xae\x96.\xb6_\x07+-"\xab\xb3\x8d|\xa4\xe4r8\x849y\xbce;\xca\xefb\xdf\x1b\xaeF%\xe0\x02O\xe5\x962\xec\xe8\x89\x94Vi\x19]\xa4.]\\+\xa98=\x82A\x07\xa8\xed\xad\xf6\xf4O\xaa/+g\x0bc]\xe1u\xe7\xe5;\xa7\x16\xe3\xd1M\x1b8&amp;*\x91px\xb1\x1a\xb4\xecb\x08=\x16\xd7\xe1X\xc7\x13\x90\x07k1\x1a\xf7\xd1i\xe1|\x02\x96p\xfb\x92;Y?\x8fP\xc8\xf9\xd9\xd7\x0bY|\xa3m\x18\xf2\xcbZ9\xc0\x84\x87j\x88\x14%dsX\x0f\xb2\x16\xbe\xca\xea\t@\xf0\xa8\x01s\x92C\x93\x9e,\xb39\xc9X\x05(*\x12\xa8&lt;\xad\x14\xa8f\x12\x93j*\xd9qR\x96\x91\x96TZ\x1dADg\x10\xa9\x1b\xaa1\x8e\'\x9f4\x8aTo\xd3\x9a\x90f\xebA}\x80\x0b\x9d9ER:\xe4\xa3=\xd5\x14)\x10\xb5g\x11u\x988\x82\xad\xa2\xf1\xcd\x12ND\xc6\xa2\xcd\xd8f\x88Mm\x00\r\x82S\x08\x02\t\xba#[.\xeb\x1byh\xe9Q\x8a\x8d\xc8^\'\r{\x04\xa6\xe1\xdc6ZY\x8a\xcd\xaa\xd3\x87\xa83-e\xcb(\xe8\xc1pFV\xd32\xd2\xc3\xca\xdb\x87\xc2\xc6\xba\xa1}a&amp;\x13\xa9\xbc\x9b\xe8\x9cy\\\x9aA\xf4T;\xecG\x14\x8c\xb0\xbc\x95S\x95\xdd\xec\xbd\'\x11\xaf\x00\xaf9\x88\x83\xee\xba\x1c\xbeZ/\x8e\xd2\xb19\x0836I\xc5U/t\x9b\xf2\x9d\x827S\xbd\xb4H\r3\x1dtM\xca\xcde+\xd5\x1d\x1c\x03\xf2\x90N\x9f\x9a\xafq\xc28\x8d\x80\x95\xe0(\xb8\x8bL.\xe7\x0c\xc5\x11\x06\xca\x14\x9ceh\xceQ\xc9\x1e\xe5\xf0\x1c_i\x88\x95\xe7\xb1\xd5\xbcS\xcd2\xa7\x11\x96\xe5\x95\x82\xadI\xd1k)&amp;\xb4c\x8d\x00\xfa\x80\xd9s\xebafcM`\xad\x8eJ{O\xf8\xeb\xcb\x9a\xcckG\x1a\xae\x1e\xfa\x11\xa8\xf3E\x84\xc2\x90\xf9m\xb6]1Q\xa4\xdcA\x9d\xfa\xdb\xec\x88@\'\xbe\x9e\x83\xe8\x98\xec\xf4\x1c)\xe1\xad\xd6N\xebG\x1b\xa4^\xc6\x9eG\xe8\xb9\x98\n\xd1\xd5t\xf8\x8b\x8b\xa9@\xd4\x91\x1f5\xa3\x97\xc1\xfe\x0c\xf1\xcaI3\xcf3\x08F\xab=Q\x04\xae\x85\x1a\xa7,&gt;\xc4!\xaa\xd6\x9d\xa5r\xc7\x92^J\xe4\xe1\x8au\x13\x9a\xc7\x08B^%nm\x10\x01\x80\x84\xe1\x98D\xee\xadOfO\x89\xd1\x96\x98k\x8d\xd0b\xf0\xed\x89\x08\xce\x1a\x0e\xa9\xc7(\x11\x13e\x13o$\xd3.\x11N.-\x7fg\x1a7L\xa7T\xe8\x13_H\xa7R\xa6\xd6\xf7U9*#\x8a\x0f/F2\xd7\xa8\xb6\xfc@\xa2\xcf7\xe8\xdb\xe8/b\x18\xf2Si\xd4 \xdc%1\xaf\x1d\xca*\x95\xc8\xd7\xd7C\x0bK\xbd\x10\xa1j\xeff\xdaE\xb6\'R\x9f\x00x\x9b\x13\xd5s\x9a\xd9\x12\x9a\xe7\xb4\xc6Py,\xa7\x16\xba:8e\x19I)#\xa2\xdaE\xf2`\x03\xcchR+S \xc75)\xb5\xcc\x008\xefoto\xc4\x83}\x08\xb1%Df\xd1\xaf/\x06N\xd3!\xa6D\x08\xba~\x1e\x93\xaf\x9a\xdc\x96gb\x89\xde\xfc\xd4{\xcb\x9aA\'\x94\x8d\x91+\x93\xd11\x84`\xb6\xc8j\xe5qi\x0b~\r\x84\x82\xfb\xe5\x02&lt;\xd77\x0fBr\xb5\xc4\x99\xb4\x9d{.\xfb\xd8\x19O(\xdb\xddo\xc5\x05w\xe8\xe7\x94\xa4\xde\xdd\xa3\x89\x8e\xbc\xfe\xcb\x89\x89\xa7\xd7\xcbI]\x0e#X\xe8\xb8\xa5\xe7\xdd_l\xd6:F\x86u\xd5Si\xc9=\xfe[\x15\x9f\xe2\xc6\xea2\xae\xb7\xd9:\x0b,k{rZhb\xfe\xcb\x90j\x17h\x9c\xc7\x10\x9b\x88\xd3;\x9412\xe2\xba\x0c\x98\x95\xe7\xb8uO\x13\xbb\xafA\x86x-\xba\x14h\xceL\x95^\x00\xb9\xbf-V_\xee\xa0\xccXs[\x83\t\xfd0\xdfu\x93\x89\xd2-g\x88\xcc\x8dO\xd5\x15\xe4\x9d\x08k\xc3\xa1\xdb\x03\xef\x13\xe8}\xd4\xc5U\xca\xf0\xed\x9c/\xb4\x1d?\x7fU\xcc\xa6\xfc\x844zs\x9d~\x89\xf5\xab\x82Z\x0f\xfb\x0b\xfa\xd8\xa0\x0e\xfe\x03\x12\t\x00\x8b\xae\xe7\x10\xa7\x14\x83\x86\x80\xed\xd4/9\x80{\\f$\xce\xab\xd5a\xc0s\x0bcQ\xbd\xef\xb1V\xa3\x94\\}\x93\x962RG\x9b\xc4?4ok\xa7d\xc8\x01\xd7\xd9dxt\xc0\xb9\x9f\x9aS\xea&gt;@\x99\x13\xa1\\\x8f\x8eUI\x8e&lt;\xa9I\xb9.\xc7\x7fpD\x88\x80N\xe8)\xd6\x04\x99\xdbd?\xdc\x9b\xb5\xc33H\xf3\x08(\x80$\xf9\xa3x\xba[+JJ\xdd\xa0\xf1R#-\xc1\n\x9a\xcf3\t\xa6\xb3\\\xc9p\xb7\xd5fep \x89\xd4\x0b\xfd\xd4\xa7&amp;\xbe\xe55\x18\xc9\xb7\xd3\xe8e0\x01\x19\xfb\xac\xf5j\x02I\x1a+\xae\xe1\xac\xeb\xb2C\x0bf\x06\xbe\xaa\xe2\xa9\xdb\x07\x17%Q@B\x89\xcd\xa29\xaaO$G\xd2b\xe9Up\x04\xdevw\xdf\x98F\xf7\x97\x10\x1f~R&gt;k\x1b^Yw:{n\xb4a1\xc4\xbc\x93a\xcc\xf6\xfeRk\xcaGJN\x9b\xbd{f\xaa\x0c\xceK \xdaD\xc5\x932\x16\x990=\xcf\xd9!\xaf.q\xf1\x12\x05\xf7\x03\xf7[\xe9\xd7\x19\xa1\xc5\xa4D_e2n\xa8\x88\xf1\xc55/B\x1a\xf2\xed\x01=\x84\xdf\xba\xd0@$\xe7i\xea\x05\xfc\xca\xcd\xf1\x80\xb3I\xd6\xd7\x81\xa9\x8f\x92k\xb1\x04]\xdd\xc1m\xce\xbam)b\xee\x8a\x94\xe2\xe2\xda\xf69\x94\xd8Z\xec\xa0\xdb\x9f\xee\xa9\x98W\xc9 \x87\x02\x7fO/\xd9,\xe2\x06\xad\xeegt\xc7\xbd\xc2\\\xd1r,d\x13\xfc\xdd\r\xca$\xc6&lt;|\x8e\x93\xa6m\xc3\x165\xc5\xa7\xc4\xe6\xeey\x8eA7\x17_\xc3\xdddn\x85\xe4\xde \xccL\xf5R\xa3\xa4\x03\xaa\xe8\x83\xf8\x99J5*\xf4r1l\x0b\x15Z"\t[\xb1m\x93q\xfc,X\xa7\x8c\x85\x08\xb7\xd1\xc6}C\x990\xbf\xc0V2\xe8*\x1a\xd6!o\x89\x9eGC\x04\xd9[\x0b@\xd5b\xe1O\xb2\xd9\x8a\x1e\x03\xcfYY\xbe\xcd#\xd1\x8d\x95a\xf1\xb2\xf48:\x9e\x19\x9bJ\xf1\xaf\xa9\xe2\x05w8^,\x1f\t\xd7eN:3og\xaa\xc2T\x958\xee\x1f=\x13\xcc_\xd2\xeb\x1e\x1d\xf7]j\xcd\xcdM\xcd\xff\x00\x89\xf6J/\xc0\x9a\xf2x\'\xbf\xae\xca1\xf9\x9c9\xa1\r\x13\xf2Z~\x0eP\x1d\x08\xe8g_\x85\xbe\x0c/]\x83\xa8Dr^\x1f\x0bS\xc4\n\xf5\xfc\x1d\xf2!8\xbd\x92\xd1\xca\xe25\x8b\x1e\xe8\xff\x00o\x92\xce\xf7\x12s\x10D\x89\xe5\xd8\xad\xb8\xfcSIy\x00\x17M\x89\xd0\xc7\xd3\xaa\xc3R\xa0\xd0\x9e\xc0i{w\\\xf9,\x9bH\xa9qj\x9c\xb7\xe8w\xc4cZ\x04\x02H\xb9\xef\xa5\xd7;\x11S \xcd\x02gMm\xce9#\xf8\xa0\xda\xd6\x13\x07\x91\xd3\xb2\xe7\xd5\x0es\xa7\x97S\xa4\x98\xd3\xc9Dr\xd9\xd3\xf4a\x16\x9c\xda\xa5\xd7\xdc\xed\x1a\x01\xec\x06\xccq\x89\xb9\x8fD\x9cM\x1c\xad\xbd\xe7\xfdt%`ewxA6\x89;\xdf\xa7E\xa0S~Y%\xe4m1\x04la%\x19.\xc8\x97\xd2v\xe2\xc5\x87\xc4\x88\x04\x8ej\x99\x16\x81s\xf2L\xce9\r\x01\xb8\xfb\xf5PVh\x00\xb7S\xb6\xb7\xdc\x84;\xdbh\xd7(R\x8f\x1e\x8a\xf8*+\xf8\x93\xa9\n%\xb2j\x1fo\xf2s\x9c\xf9e\xc0\xcc \t\xdfk\xc7\xbfELy7\x1aF\x83\xd3\xd5@\xe3\xbf\xdf\xf3t\xfc0`\'0$\x130\x0cN\x9e\x9b\xae\x94\x94N79M\xd3e\xfcC\x161\xf4\xf2&gt;k=7\xc5@\x7f\xc6 \xeb\xae\xc7\xdb\xd5tFH\x0e\r7\xff\x00\x12d\x9dtY\xeb1\xaeq,1\x17\x83h\x1d\xc2I\xfd\x8b\xc5\xc7m\xda\xfc\x81Q\xe4\x83\x96yX[\xf6\x99\x8f5\xb73\x83n\x04\x86\xcc\x89&gt;\xa65Y\x99K)\xccL\x9e\x9dB#\x98\xeaH\x8d\x07E2\x8d\xed\x07\x1f&amp;\t\xc5\xa2\xd9X\x91k\x11\x16&lt;\xb9-T+\xc3\xe74_,\x1f\x99\xf7H\x0c$\x12\x00$\x19 \x98:}\xc2\xa1LD\x90d\xdf]:D[EZ2J\x95\x9a\x9f\xc4\xe9\xb5\xa6\x1aI"\xe4\xc9\x9b\x8b\x98\xd3t\xeaX\x82\x18&lt;0yrY\x18\xc0\x08-%\xa4\x8dG\xcdl~&amp;\xd6\'O^\xa9I\xb5\xd25\x84\x94\xbfs0\xe2*\x97[\xcdr\xb1\xf5\x00\x19A]\xe2\xcc\xc4\x1d\xc8\x93m\xed\x03\xd1c\xa3\x80n|\xcf\xb3sL\x8d`Lyh\x9c]m\x8eR\xbf\x8a&lt;\xe6\x13\x0e*T\xc8\xe7e\x90\xe8\xff\x00\xb4\x18\x9eC\x7f%\x8d\xf4_.\x05\xa4\x16\x98 \xf3&amp;#\xeb\xd8/gW\x84Sl\xbd\x84\xde\xc0\x11\x1f\xe4\x0c\xfd\x13\x18\xe7\x01\x12\x1b\x1aH$\x99\x16\xb4~@W\xf5wk\xa18\xd4i\xf6\x9f\xfa&lt;\xdf\x0c\xa6o\x02G?8\x9f\x92\xdf^\x83\xe2\xedtv+\xd2a\xa8\xbc\x8c\xedkL\x0f\xd4D\x93\x16\xb0;k\xe6\x93\x89\xc5\x17\x12\xc7\x88\xed\x02\xda\xc9X\xcb\x99\xb9TQ\xacb\xa3\x1bl\xf0uhK\xa0\x98\x12\x07\xfe\x8c\'\xd3\xa6\xe68M\x88w&gt;\xc3\xdeW\xa1\xfe\xd1\xae:\x07I\x91\x02f7\xf9\xfc\x92\xdf\x86\x0e$\xeaE\xc8\x89\xf3\xf5]*z9\\\xad\xe8\xd1\x86\xaeu\x1b\xc4.\xfe\x06\xa9&amp;\n\xf3\x94_\x91\xa0\x91\xfaH\x1e\xeb\xb3\x86\xc7\x80\xd6\x90&amp;u\xed\x7f\xa8\xf4Y\xad2\xf3L\xf2\xd8\xcaykT\x11\x039\x03\xc9\xdbyJ\xdc\xc7x\x08p\xe5\x1d\xef\xfb-X\xaa!\xe4\xbc\xb4\x98\x89\'\xaf\xf1\xf3D\xcc!\xc8]\x06"\xe2\xfa\xff\x00\xb7\xb2r\x94IM\xbe\x8cX1\x04\x87s^\x83\x83b\xb2\x98\xd6#\xddq\xb2K\xbe`r\xdf\xd6V\x9c\x16(1\xe0\x91\x12n&gt;S\xda\xc9];\x1cev\x83\xc4\xb8\x17\xb8\t\xfdO=\x84\x9d&lt;\xa1*\xa1\x8do\xd6\xf1\x1bB,i\x97f\xb3s\x1c\xfd\x9aIw\xd5gs\xdd\xaf\xb6\xde[XB(\xc5\xb0\x98\x06\x80\t\xd3Aqr\xa5F\x89\x16\x83i\x1d\xadt\xb0\xfd$\xe9&gt;{\x15Oy\xbcr&gt;\xbb{J\x85\x1a\x95\xd9\xbc\xf9\x94\xa0\xa2\x90A\xfa\x1d/\x16\xb7;\xfc\x94~ \xe9\x98\xf3J&amp;!\xad\xf5\xd2Gd\xb8\x06\xe6\xd1\xeb\xb5\xa5Y\x87\x90\xde\xf9\x172{\xe8\xb3\xd6\x02`\x1d\xa4\xf4\x10\x7fd\xd2F\x9a\x01\x7f]\xbb q\x17\x13\xae\xa7\xf3\xc9\x08m\x0b\xce9*M\x86\x8dO\xb7\xd9D\xaf\xec^\x0b\xda,47\xc4y\xff\x00)\x80\xb6g\xa5\xba\xfeJ&amp;Q\x01\xb2\xeb\xca\x1a\xa0\x08\x8d\x12SM\xd0\xdf\x1c\x92\xc8\xd9\x87\xd2\xcd\x13\xd7XC^\x9br\x97\x86\xee$\r\xfa\x8fU\x99\x98\xa8\x04\x8f\xcei\x8c\xc4KH\x8b9g(\xcb+F\xeb\x93\x8d\xc3\x16\xb7\xff\x00H\xc7\x90D\xe8-\xe5\xaf\xd5\x1bjxm\xae\xdf\xbaC\xa4\x1b\x03\x1b\xfe\xcb@`\x88\xb0\xfc\xb2\xb6\x8ca\'z \xab=N\x84t\xee\xae\x9dH\xb6\xd37\xec\xab\xc3\x94\x99\xd3\x96\xe9\xec\xa3\xe1\x1as\x17\xfa%t[\x84\xa5n\x8b\xa4A!\xb1h\xd7\xeb\xf9\xcdJT\xad-&amp;f\xc7\xa0\xfd\x95\xd4\xa7\x97,\x18\x91\'\xec\x90w\xca|\xba&amp;g^MY\x0c\x01\x9aA\x13\xaf\xba\x10\x1au\xbe\x829\x1e\x93\xaa\xcfA\xc4\x98\x87A\x9f\xce\xc9\xef\xa4\xe6\x00\xe9\x02/c\xa2\x97$\x87\x18\xde\xf6\xcd,"\x08\xcal\xddO1\xbfD\x972\x03a\xd9\xa0Lr\xbc\x8f5t\x9e\xe1\xe2\x16\x9fn\xc9o7&amp;"A\xe9u)5\xe4\xd2m:T\xf4\x86\xbb\x14\xe6\x80\xd6\x9b\x81\xcfRPV\x82\x0b\xb3A\x98v\xf7\x8d\xbf7UF\x86\xf2l\x14\xaf\x87!\xa4E\x88\x07_\x9c\xa6\xb8\xd4v)\xf2g\x15\x14\xaa\x83{\xc3\x80 \x8b\x08\xe9\xa0\x80\x83\xe12m\x7fx\xd6\x12\xbe\x04\x0bi\xe8\x10\nF@;Xu\x1d|\xd5\xab0t\x99\xae\x93\x1d&amp;\x00\x90\x0b\xa3r,#\xdd\x1dWC\x03\x86\xa4\xc6R,"\xc7E\x8f\xe1\x90\xe9\x9b\x83\xaakd\xe6.2b\xc2l.\xa5\xc6NVi\x19%\x16\x8auR\x06Q\xceO\xca\xdd\xbe\xe8\xabW\x90.fn\x07!\xb8HuI\x80\x04\x10P\x9a\x85\xc4\x80:Lk\x1c\x90\xd2n\xd8\x93\x92M\'\xa2\xd8\x0e\xb1\xfc\x1bz\xa3\xa9HH\x04\x0e\xea\xdf\x98\x8by\x03\xb7\x92Vp\xd2u\x97_\x9fB\xae\xdf\x81c\x8fv\x87\xd5\x13\x17\xdaz[\x9a\xce\x1d{[\xae\xa0\xa61\xf37\xec&gt;\x88\x1c\xed\xe3KD*\xb36\x84\x96\xc8\xf3\xdb\xf3\xf2P\xcfq\xb7\x91\xe6\x9c\xeaw.\xe7\x13\xaf\x92\x8d\xeb\'\xae\x96\xb5\x92\xb1\xe2!\xc0\x8d\xcd\xf9\t\xbf\xd1if\x00\x9b\xe6\x13\xd8\x95\x9c\x1c\xb2Z&amp;c[\xed\xaf}\x10\x8a\xaem\xcb\xbfT\x9e\x80m\n%\x9f\xf1\xd1\xd1\x08\xf0\xff\x00&amp;\x03\xf0o\x0f\r$\x92n"\xcd\xf9\xf2F\xfc\x0b\xc5\xc1\x07\xcf\x97\x92]Z\xefv_\x14F\xe2\xf3\xd0\xa6\x7fp\xf1\xa6\xff\x00"\x8f\x9e\xba\x06\xb8\x9d\xdb\x7fc\x1a\x89\xd9\x9cT[Y\xcaSj\x98\x85\xb1\x94\x9c\xf1\xb4\x05\xce5`\xd9\x1f\xc7#Ce\x9b\x8f\xa4u*\xaa\x93\x1a\x04:\x0c-t\x9e\x01\xd9s\xd8m)\xac\t\xb5\xad\x99)T\xad\x1b\x18\xf0N\xba%\xb5\xfe+$8F\x88\xda\xe4P\xb25\xba\x9e\xa4\x04.}\x87-\x12\xe9\xd4\xb2k"\xd6\xf3SW\xa6\x8arKqe\xba\xa0tI6\xb2`x\x00\x11\tU\x1e&amp;@\xf4V\xddUx#\xa7\xec{j\x1d6T\xfa`\xd8\xf3T\xe3-\xd0\x84\x02\xb6k|\x8a\x87\x14\xd1jm:\xbd\rv5\xa2\xc1\xa1\xd0\xb4&gt;\xbc\xb0\x12 \xac4\xc8i\xda\x13)\xbb19\xbc\x96K\x89\xa9_\xa3\xa7\x93\xf5\x10\x94qJ\x83&amp;\xd2&amp;\xfa\xa7a\xf1\x01\xa2"LF\xb6\xf4V\xfa\xb2\x00\x00Xl\x95H\xd8\x95\xb3V\x8eH\xbav\x99Uj\xe6\xb6Q\xe5d\x0f7\x07a\xee\xad\xee\x129\xadT\xc3\x08\x83s\xcd,\x94P\xf1r\x91\x85\xde\'|\xc2\x85\xd3c\xb2{\xb0\xe0X:\xe8\xf33)i\xf5\xea\x97\xd4E\xaf\xd3\xca\xf6)\xef\xb0\xcae\xc2\xd2{&amp;a\xb0\xe7,\x82\x07S\xba\xc7U\xa1\xa6&amp;m\xdb\xcd%\x98\xc79\xb9@\x80\xdb\x0ee\x1c\x9b_\x13N\x087/\x96\x8d\xcf\xc2\x16\x9c\xf2\x1d\xcf\x98\xea\xb39\xed6\r\x8e\xa56\x8dBE\xf5\x84\x972\x0c\xe8\x97\x15\xb4\xec\x7f\xaa\xd4\x92\xbb\x16\xd7\xc1\x9f\xe29\xa6\xb6\xa5\xa7\xc8\xc2\xb1\x974\xc6\xc8\x83\x9aI\xbd\x95\xb9\xb5\xaa0\x8f\x1aj\xedY\x95\xf5\xc8&lt;\xc2\x82\xb4\x8b[\x7f\xd8#u\x16\x89\x97n\x96\xdc1\xff\x00\x12;tM4\x89i\xb7@\t:m\xbe\x93\xf7E\x88\xc3\x92\x7fP$\r6\x08]O)\xd5G:\x01\xbd\xcan\xdb\xd3\x05\x8a[3\xe43\x07\x9d\xe3\xa2"\xc9\xbc\xe9\xb7\xd5M \xab\x0f\x00\xa6\x98\x94m\x89sJ\xb4N\x95\x13\xb1\xe0e;\xa7\xd2\xd1E\x13d\x8cf\x8aSV\xa2L\x06\xb7To\xd1E\x12\x027T\xfd\x94Q\x08\x90h\xea\xad\xdf\xa8(\xa2\x99to\xc3\xdf\xf4iJ~\xca(\xa5v\x89\x91GO4j(\xaa&gt;H\x97\x80\xa9&amp;\xb7O5j*BBF\xa8\xda\xa2\x8b)ti\x0e\xc6;\xe8\xb1T\xddE\x16H\xec\x8f\xee@c4\t,\xfdAZ\x8bU\xd1+\xb7\xf95\xb1\x05}TQTz8\xf9;#\xbe\x89J(\xac\x90\xaaj\x81\xca(\x81\xb1\x0e\xd5$\xaaQ\x1e\x85\xec*\xba(\x14Q\x0f\xa2\xa3\xfb\x86\xb5E\x14Y\x9dG\xff\xd9\r\n--bb4fc9a40a3be4913532ee3639e441cd--\r\n' 
 </msg>
<msg timestamp="20220714 19:46:50.937" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet/9843217/uploadImage 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:50 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":200,"type":"unknown","message":"additionalMetadata: null\nFile uploaded to ./dog.jpg, 5765 bytes"} 
 </msg>
<msg timestamp="20220714 19:46:50.937" level="INFO">C:\Users\janardan\AppData\Local\Programs\Python\Python310\lib\site-packages\urllib3\connectionpool.py:1013: InsecureRequestWarning: Unverified HTTPS request is being made to host 'petstore.swagger.io'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/1.26.x/advanced-usage.html#ssl-warnings
  warnings.warn(</msg>
<msg timestamp="20220714 19:46:50.940" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:50.308" endtime="20220714 19:46:50.940"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:50.944" level="INFO">{'code': 200, 'type': 'unknown', 'message': 'additionalMetadata: null\nFile uploaded to ./dog.jpg, 5765 bytes'}</msg>
<status status="PASS" starttime="20220714 19:46:50.941" endtime="20220714 19:46:50.944"/>
</kw>
<status status="PASS" starttime="20220714 19:46:50.302" endtime="20220714 19:46:50.944"/>
</kw>
<kw name="Add a new pet to the store">
<tag>API</tag>
<doc>Here we are adding a new pet</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{category}</var>
<arg>id=101</arg>
<arg>name=tuffy</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:50.948" level="INFO">&amp;{category} = { id=101 | name=tuffy }</msg>
<status status="PASS" starttime="20220714 19:46:50.947" endtime="20220714 19:46:50.948"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags}</var>
<arg>${category}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:50.949" level="INFO">@{tags} = [ {'id': '101', 'name': 'tuffy'} ]</msg>
<status status="PASS" starttime="20220714 19:46:50.949" endtime="20220714 19:46:50.950"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{photoUrls}</var>
<arg>${photoUrl}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:50.950" level="INFO">@{photoUrls} = [ https://petstore.swagger.io/v2/pet/9843217/uploadImage ]</msg>
<status status="PASS" starttime="20220714 19:46:50.950" endtime="20220714 19:46:50.950"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:50.951" level="INFO">${Header} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:50.951" endtime="20220714 19:46:50.951"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>id=101</arg>
<arg>category=&amp;{category}</arg>
<arg>name=doggie</arg>
<arg>photoUrls=@{photoUrls}</arg>
<arg>tags=@{tags}</arg>
<arg>status=available</arg>
<arg>headers=${Header}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:50.953" level="INFO">&amp;{req_body} = { id=101 | category={'id': '101', 'name': 'tuffy'} | name=doggie | photoUrls=['https://petstore.swagger.io/v2/pet/9843217/uploadImage'] | tags=[{'id': '101', 'name': 'tuffy'}] | status=available | hea...</msg>
<status status="PASS" starttime="20220714 19:46:50.952" endtime="20220714 19:46:50.953"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 19:46:51.515" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '292', 'Content-Type': 'application/json'} 
 body=b'{"id": "101", "category": {"id": "101", "name": "tuffy"}, "name": "doggie", "photoUrls": ["https://petstore.swagger.io/v2/pet/9843217/uploadImage"], "tags": [{"id": "101", "name": "tuffy"}], "status": "available", "headers": {"accept": "application/json", "Content-Type": "application/json"}}' 
 </msg>
<msg timestamp="20220714 19:46:51.515" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:51 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":101,"category":{"id":101,"name":"tuffy"},"name":"doggie","photoUrls":["https://petstore.swagger.io/v2/pet/9843217/uploadImage"],"tags":[{"id":101,"name":"tuffy"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 19:46:51.516" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:50.954" endtime="20220714 19:46:51.516"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${req_body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:51.517" level="INFO">{'id': '101', 'category': {'id': '101', 'name': 'tuffy'}, 'name': 'doggie', 'photoUrls': ['https://petstore.swagger.io/v2/pet/9843217/uploadImage'], 'tags': [{'id': '101', 'name': 'tuffy'}], 'status': 'available', 'headers': {'accept': 'application/json', 'Content-Type': 'application/json'}}</msg>
<status status="PASS" starttime="20220714 19:46:51.517" endtime="20220714 19:46:51.518"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:51.521" level="INFO">{'id': 101, 'category': {'id': 101, 'name': 'tuffy'}, 'name': 'doggie', 'photoUrls': ['https://petstore.swagger.io/v2/pet/9843217/uploadImage'], 'tags': [{'id': 101, 'name': 'tuffy'}], 'status': 'available'}</msg>
<status status="PASS" starttime="20220714 19:46:51.518" endtime="20220714 19:46:51.521"/>
</kw>
<status status="PASS" starttime="20220714 19:46:50.946" endtime="20220714 19:46:51.522"/>
</kw>
<kw name="Update an existing pet">
<tag>API</tag>
<doc>Here we are updating the details of pet</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{category}</var>
<arg>id=101</arg>
<arg>name=tuffy</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:51.525" level="INFO">&amp;{category} = { id=101 | name=tuffy }</msg>
<status status="PASS" starttime="20220714 19:46:51.524" endtime="20220714 19:46:51.525"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags}</var>
<arg>${category}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:51.526" level="INFO">@{tags} = [ {'id': '101', 'name': 'tuffy'} ]</msg>
<status status="PASS" starttime="20220714 19:46:51.525" endtime="20220714 19:46:51.526"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:51.527" level="INFO">${Header} = {'accept': 'application/json', 'Content-Type': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:51.526" endtime="20220714 19:46:51.527"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>id=101</arg>
<arg>category=&amp;{category}</arg>
<arg>name=doggie</arg>
<arg>tags=@{tags}</arg>
<arg>status=available</arg>
<arg>headers=${Header}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:51.528" level="INFO">&amp;{req_body} = { id=101 | category={'id': '101', 'name': 'tuffy'} | name=doggie | tags=[{'id': '101', 'name': 'tuffy'}] | status=available | headers={'accept': 'application/json', 'Content-Type': 'application/json'}...</msg>
<status status="PASS" starttime="20220714 19:46:51.527" endtime="20220714 19:46:51.528"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_url}</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 19:46:52.089" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '219', 'Content-Type': 'application/json'} 
 body=b'{"id": "101", "category": {"id": "101", "name": "tuffy"}, "name": "doggie", "tags": [{"id": "101", "name": "tuffy"}], "status": "available", "headers": {"accept": "application/json", "Content-Type": "application/json"}}' 
 </msg>
<msg timestamp="20220714 19:46:52.089" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:52 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":101,"category":{"id":101,"name":"tuffy"},"name":"doggie","photoUrls":[],"tags":[{"id":101,"name":"tuffy"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 19:46:52.090" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:51.529" endtime="20220714 19:46:52.090"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${req_body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:52.091" level="INFO">{'id': '101', 'category': {'id': '101', 'name': 'tuffy'}, 'name': 'doggie', 'tags': [{'id': '101', 'name': 'tuffy'}], 'status': 'available', 'headers': {'accept': 'application/json', 'Content-Type': 'application/json'}}</msg>
<status status="PASS" starttime="20220714 19:46:52.090" endtime="20220714 19:46:52.091"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:52.094" level="INFO">{'id': 101, 'category': {'id': 101, 'name': 'tuffy'}, 'name': 'doggie', 'photoUrls': [], 'tags': [{'id': 101, 'name': 'tuffy'}], 'status': 'available'}</msg>
<status status="PASS" starttime="20220714 19:46:52.092" endtime="20220714 19:46:52.094"/>
</kw>
<status status="PASS" starttime="20220714 19:46:51.523" endtime="20220714 19:46:52.094"/>
</kw>
<kw name="Remove an existing pet">
<tag>API</tag>
<doc>Here we are removing pet</doc>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{category}</var>
<arg>id=101</arg>
<arg>name=tuffy</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:52.097" level="INFO">&amp;{category} = { id=101 | name=tuffy }</msg>
<status status="PASS" starttime="20220714 19:46:52.096" endtime="20220714 19:46:52.097"/>
</kw>
<kw name="Create List" library="BuiltIn">
<var>@{tags}</var>
<arg>${category}</arg>
<doc>Returns a list containing given items.</doc>
<msg timestamp="20220714 19:46:52.098" level="INFO">@{tags} = [ {'id': '101', 'name': 'tuffy'} ]</msg>
<status status="PASS" starttime="20220714 19:46:52.097" endtime="20220714 19:46:52.098"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>${Header}</var>
<arg>accept=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:52.099" level="INFO">${Header} = {'accept': 'application/json'}</msg>
<status status="PASS" starttime="20220714 19:46:52.098" endtime="20220714 19:46:52.099"/>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{req_body}</var>
<arg>id=101</arg>
<arg>category=&amp;{category}</arg>
<arg>name=doggie</arg>
<arg>tags=@{tags}</arg>
<arg>status=available</arg>
<arg>headers=${Header}</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 19:46:52.101" level="INFO">&amp;{req_body} = { id=101 | category={'id': '101', 'name': 'tuffy'} | name=doggie | tags=[{'id': '101', 'name': 'tuffy'}] | status=available | headers={'accept': 'application/json'} }</msg>
<status status="PASS" starttime="20220714 19:46:52.099" endtime="20220714 19:46:52.101"/>
</kw>
<kw name="DELETE" library="RequestsLibrary">
<var>${response}</var>
<arg>${base_urldelete}</arg>
<arg>json=${req_body}</arg>
<arg>expected_status=200</arg>
<doc>Sends a DELETE request.</doc>
<msg timestamp="20220714 19:46:52.659" level="INFO">DELETE Request : url=https://petstore.swagger.io/v2/pet/101 
 path_url=/v2/pet/101 
 headers={'User-Agent': 'python-requests/2.26.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '183', 'Content-Type': 'application/json'} 
 body=b'{"id": "101", "category": {"id": "101", "name": "tuffy"}, "name": "doggie", "tags": [{"id": "101", "name": "tuffy"}], "status": "available", "headers": {"accept": "application/json"}}' 
 </msg>
<msg timestamp="20220714 19:46:52.659" level="INFO">DELETE Response : url=https://petstore.swagger.io/v2/pet/101 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 16:46:52 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":200,"type":"unknown","message":"101"} 
 </msg>
<msg timestamp="20220714 19:46:52.659" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 19:46:52.101" endtime="20220714 19:46:52.659"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${req_body}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:52.660" level="INFO">{'id': '101', 'category': {'id': '101', 'name': 'tuffy'}, 'name': 'doggie', 'tags': [{'id': '101', 'name': 'tuffy'}], 'status': 'available', 'headers': {'accept': 'application/json'}}</msg>
<status status="PASS" starttime="20220714 19:46:52.659" endtime="20220714 19:46:52.660"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 19:46:52.661" level="INFO">{'code': 200, 'type': 'unknown', 'message': '101'}</msg>
<status status="PASS" starttime="20220714 19:46:52.660" endtime="20220714 19:46:52.661"/>
</kw>
<status status="PASS" starttime="20220714 19:46:52.095" endtime="20220714 19:46:52.661"/>
</kw>
<doc>Working on pet</doc>
<tag>API</tag>
<status status="PASS" starttime="20220714 19:46:50.301" endtime="20220714 19:46:52.661"/>
</test>
<status status="PASS" starttime="20220714 19:46:50.293" endtime="20220714 19:46:52.664"/>
</suite>
<status status="PASS" starttime="20220714 19:46:45.749" endtime="20220714 19:46:52.666"/>
</suite>
<status status="PASS" starttime="20220714 19:46:45.581" endtime="20220714 19:46:52.671"/>
</suite>
<statistics>
<total>
<stat pass="5" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="5" fail="0" skip="0">API</stat>
</tag>
<suite>
<stat pass="5" fail="0" skip="0" id="s1" name="SwaggerAPI">SwaggerAPI</stat>
<stat pass="5" fail="0" skip="0" id="s1-s1" name="TestCases">SwaggerAPI.TestCases</stat>
<stat pass="4" fail="0" skip="0" id="s1-s1-s1" name="US2">SwaggerAPI.TestCases.US2</stat>
<stat pass="1" fail="0" skip="0" id="s1-s1-s2" name="US2New">SwaggerAPI.TestCases.US2New</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
